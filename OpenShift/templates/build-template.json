
{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata":
  {
    "name": "news-webapp-build",
    "annotations":
    {
      "description": "Contains build objects",
      "tags": "aspnetcore",
      "iconClass": "icon-github"
    }
  },
  "labels":
  {
    "template": "news-webapp-build"
  },
  "objects": [ 
  {
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "dotnet-sonar",
        "creationTimestamp": null,
        "labels": {
            "app": "dotnet-sonar",
            "template": "dotnet-sonar-build"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "dockerfile": "",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp",
                "ref": "develop"
            },
            "contextDir": "/Dotnet-Sonar"
        },
        "strategy": {
            "type": "Docker",
            "dockerStrategy": {
				"dockerfilePath" : "Dockerfile.RHEL"
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
                "name": "dotnet-sonar:latest"
            }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
    {
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        },
        "annotations": {
            "openshift.io/generated-by": "OpenShiftNewApp"
        }
    },
    "spec": {
        "lookupPolicy": {
            "local": false
        }
    },
    "status": {
        "dockerImageRepository": ""
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "dotnet-snyk",
        "creationTimestamp": null,
        "labels": {
            "app": "dotnet-snyk",
            "template": "dotnet-snyk-build"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "dockerfile": "",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp",
                "ref": "develop"
            },
            "contextDir": "/Dotnet-Snyk"
        },
        "strategy": {
            "type": "Docker",
            "dockerStrategy": {
				"dockerfilePath" : "Dockerfile.RHEL"
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
                "name": "dotnet-snyk:latest"
            }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
    {
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        },
        "annotations": {
            "openshift.io/generated-by": "OpenShiftNewApp"
        }
    },
    "spec": {
        "lookupPolicy": {
            "local": false
        }
    },
    "status": {
        "dockerImageRepository": ""
    }
},
{
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "dotnet-sonar",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "dotnet-sonar"
        },
        "annotations": {
            "openshift.io/generated-by": "OpenShiftNewApp"
        }
    },
    "spec": {
        "lookupPolicy": {
            "local": false
        }
    },
    "status": {
        "dockerImageRepository": ""
    }
},
{
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "dotnet-snyk",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "dotnet-snyk"
        }
    },
    "spec": {
        "lookupPolicy": {
            "local": false
        }
    },
    "status": {
        "dockerImageRepository": ""
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-develop",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "GitHub",
                "github": {
                    "secret": "3XtnspHIC8mT7UdgI8hT"
                }
            },
            {
                "type": "Generic",
                "generic": {
                    "secret": "S9eYwKjY8a-hCGo-JSsC"
                }
            },
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "develop"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-20-rhel7:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
                "name": "news-webapp:latest"
            }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-master",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "GitHub",
                "github": {
                    "secret": "3XtnspHIC8mT7UdgI8hT"
                }
            },
            {
                "type": "Generic",
                "generic": {
                    "secret": "S9eYwKjY8a-hCGo-JSsC"
                }
            },
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "master"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-20-rhel7:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {
            "to": {
                "kind": "ImageStreamTag",
                "name": "news-webapp:latest"
            }
        },
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-sonar-develop",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "GitHub",
                "github": {
                    "secret": "3XtnspHIC8mT7UdgI8hT"
                }
            },
            {
                "type": "Generic",
                "generic": {
                    "secret": "S9eYwKjY8a-hCGo-JSsC"
                }
            },
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "develop"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-sonar:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-sonar-master",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "GitHub",
                "github": {
                    "secret": "3XtnspHIC8mT7UdgI8hT"
                }
            },
            {
                "type": "Generic",
                "generic": {
                    "secret": "S9eYwKjY8a-hCGo-JSsC"
                }
            },
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "master"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-sonar:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-snyk-develop",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "develop"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-snyk:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-snyk-master",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp"
        }
    },
    "spec": {
        "triggers": [
            {
                "type": "ImageChange",
                "imageChange": {}
            },
            {
                "type": "ConfigChange"
            }
        ],
        "runPolicy": "Serial",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "master"
            }
        },
        "strategy": {
            "type": "Source",
            "sourceStrategy": {
                "from": {
                    "kind": "ImageStreamTag",
                    "name": "dotnet-snyk:latest"
                },
                "env": [
                    {
                        "name": "DOTNET_STARTUP_PROJECT",
                        "value": "Gov.News.WebApp"
                    }
                ]
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null,
        "successfulBuildsHistoryLimit": 5,
        "failedBuildsHistoryLimit": 5
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "ImageStream",
    "apiVersion": "v1",
    "metadata": {
        "name": "dotnet",
        "generation": 2,
        "creationTimestamp": null,
        "annotations": {
            "openshift.io/display-name": ".NET Core Builder Images",
            "openshift.io/image.dockerRepositoryCheck": "2017-11-11T00:28:09Z"
        }
    },
    "spec": {
        "lookupPolicy": {
            "local": false
        },
        "tags": [
            {
                "name": "2.0",
                "annotations": {
                    "description": "Build and run .NET Core 2.0 applications on CentOS 7. For more information about using this builder image, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore/tree/master/2.0/build/README.md.",
                    "iconClass": "icon-dotnet",
                    "openshift.io/display-name": ".NET Core 2.0",
                    "sampleContextDir": "app",
                    "sampleRef": "dotnetcore-2.0",
                    "sampleRepo": "https://github.com/redhat-developer/s2i-dotnetcore-ex.git",
                    "supports": "dotnet:2.0,dotnet",
                    "tags": "builder,.net,dotnet,dotnetcore,rh-dotnet20",
                    "version": "2.0"
                },
                "from": {
                    "kind": "DockerImage",
                    "name": "registry.centos.org/dotnet/dotnet-20-centos7:latest"
                },
                "generation": 2,
                "importPolicy": {},
                "referencePolicy": {
                    "type": "Source"
                }
            },
            {
                "name": "latest",
                "annotations": {
                    "description": "Build and run .NET Core applications on CentOS 7. For more information about using this builder image, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore/tree/master/2.0/build/README.md. WARNING: By selecting this tag, your application will automatically update to use the latest version of .NET Core available on OpenShift, including major versions updates.",
                    "iconClass": "icon-dotnet",
                    "openshift.io/display-name": ".NET Core (Latest)",
                    "sampleContextDir": "app",
                    "sampleRef": "dotnetcore-2.0",
                    "sampleRepo": "https://github.com/redhat-developer/s2i-dotnetcore-ex.git",
                    "supports": "dotnet",
                    "tags": "builder,.net,dotnet,dotnetcore"
                },
                "from": {
                    "kind": "DockerImage",
                    "name": "registry.centos.org/dotnet/dotnet-20-centos7:latest"
                },
                "generation": 1,
                "importPolicy": {},
                "referencePolicy": {
                    "type": "Source"
                }
            }
        ]
    },
    "status": {
        "dockerImageRepository": ""
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-master-pipeline",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp",
            "name": "news-webapp-master-pipeline",
            "template": "news-webapp"
        }
    },
    "spec": {
        "runPolicy": "Parallel",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "master"
            }
        },
        "strategy": {
            "type": "JenkinsPipeline",
            "jenkinsPipelineStrategy": {
                "jenkinsfilePath": "Jenkinsfile-master"
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
{
    "kind": "BuildConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "news-webapp-develop-pipeline",
        "creationTimestamp": null,
        "labels": {
            "app": "news-webapp-pipeline",
            "name": "news-webapp-develop-pipeline",
            "template": "news-webapp"
        }
    },
    "spec": {
        "runPolicy": "Parallel",
        "source": {
            "type": "Git",
            "git": {
                "uri": "https://github.com/bcgov/gcpe-news-webapp.git",
				"ref": "develop"
            }
        },
        "strategy": {
            "type": "JenkinsPipeline",
            "jenkinsPipelineStrategy": {
                "jenkinsfilePath": "Jenkinsfile-develop"
            }
        },
        "output": {},
        "resources": {},
        "postCommit": {},
        "nodeSelector": null
    },
    "status": {
        "lastVersion": 0
    }
},
{
		"kind": "DeploymentConfig",
		"apiVersion": "v1",
		"metadata": {
			"name": "${DATABASE_SERVICE_NAME}",
			"generation": 1,
			"creationTimestamp": null,
			"labels": {
						"app": "${DATABASE_SERVICE_NAME}"
			},			
			"annotations": {
				"description": "Defines how to deploy the database",
				"openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
			}
		},
		"spec": {
			"strategy": {
				"type": "Recreate"				
			},
			"triggers": [
				{
					"type": "ConfigChange"
				},
				{
					"type": "ImageChange",
					"imageChangeParams": {
						"automatic": true,
						"containerNames": [
							"postgres"
						],
						"from": {
							"kind": "ImageStreamTag",
							"namespace":  "${POSTGRES_IMAGE_NAMESPACE}",
							"name": "postgresql:9.5"
						}						
					}
				}
			],
			"replicas": 1,
			"test": false,
			"selector": {
				"app": "${DATABASE_SERVICE_NAME}",
				"deploymentconfig": "${DATABASE_SERVICE_NAME}"
			},
				
			"template": {
				"metadata": {
					"creationTimestamp": null,
					"labels": {
						"app": "${DATABASE_SERVICE_NAME}",
						"deploymentconfig": "${DATABASE_SERVICE_NAME}"
					},
					"annotations": {
						"openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
					}
				},
				"spec": {
					"volumes": [
						{
							"name": "${DATABASE_SERVICE_NAME}-data",
							"persistentVolumeClaim": {
								"claimName": "${DATABASE_SERVICE_NAME}-pvc"
							}
						}
					],
					"containers": [
						{
							"name": "postgres",
							"image": "registry.access.redhat.com/rhscl/postgresql-95-rhel7",
							"ports": [
								{
									"containerPort": 5432,
									"protocol": "TCP"
								}
							],
							"env": [
								{
									"name": "POSTGRESQL_DATABASE",
									"value": "${DATABASE_NAME}"
								},
								{
									"name": "POSTGRESQL_PASSWORD",
									"value": "${DATABASE_PASSWORD}"
								},
								{
									"name": "POSTGRESQL_USER",
									"value": "${DATABASE_USER}"
								}
							],
							"readinessProbe": {
								"timeoutSeconds": 1,
							  "initialDelaySeconds": 3,
							  "exec": {
								"command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U ${DATABASE_USER} -q -d ${DATABASE_NAME} -c 'SELECT 1'"]                    
							  }
							},
							"livenessProbe": {
							  "timeoutSeconds": 1,
							  "initialDelaySeconds": 30,
							  "tcpSocket": {
								"port": 5432
							  }
							},
							"resources": {},
							"volumeMounts": [
								{
									"name": "${DATABASE_SERVICE_NAME}-data",
									"mountPath": "/var/lib/pgsql/data"
								}
							],
							"terminationMessagePath": "/dev/termination-log",
							"imagePullPolicy": "Always"
						}
					],
					"restartPolicy": "Always",
					"terminationGracePeriodSeconds": 30,
					"dnsPolicy": "ClusterFirst",
					"securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
            },
			"restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"			
		},		
		"status": {}
	    }
    },
	{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgres",
			"protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
			"nodePort": 0
          }
        ],
        "selector": {
          "app": "${DATABASE_SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
	   "status": {
        "loadBalancer": {}
      }
    },	
{
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}-pvc"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${DATABASE_VOLUME_CAPACITY}"
          }
        }
      }
    },
{
    "kind": "DeploymentConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "sonarqube",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "sonarqube",
            "deploymentconfig": "sonarqube"
        }
    },
    "spec": {
        "strategy": {
            "type": "Rolling",
            "rollingParams": {
                "updatePeriodSeconds": 1,
                "intervalSeconds": 1,
                "timeoutSeconds": 600,
                "maxUnavailable": "25%",
                "maxSurge": "25%"
            },
            "resources": {},
            "activeDeadlineSeconds": 21600
        },
        "triggers": [
            {
                "type": "ConfigChange"
            },
            {
                "type": "ImageChange",
                "imageChangeParams": {
                    "automatic": true,
                    "containerNames": [
                        "sonarqube"
                    ],
                    "from": {
                        "kind": "ImageStreamTag",
                        "namespace": "gcpe-news-tools",
                        "name": "sonarqube:6.7"
                    }
                }
            }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
            "app": "sonarqube",
            "deploymentconfig": "sonarqube"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "annotations": {
                    "openshift.io/container.sonarqube.image.entrypoint": "[\"./bin/run.sh\"]"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "sonar-logs",
                        "emptyDir": {}
                    },
                    {
                        "name": "sonar-temp",
                        "emptyDir": {}
                    },
                    {
                        "name": "sonar-data",
                        "emptyDir": {}
                    },
                    {
                        "name": "sonar-plugins",
                        "emptyDir": {}
                    }
                ],
                "containers": [
                    {
                        "name": "sonarqube",
                        "image": "openshiftdemos/sonarqube@sha256:fe2c7b8e9923c4dc4bd7a5d12d51ee61eb171f8898121d5f7a921ba4e5a3e67c",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SONARQUBE_JDBC_PASSWORD",
                                "value": "${DATABASE_PASSWORD}"
                            },
                            {
                                "name": "SONARQUBE_JDBC_URL",
                                "value": "jdbc:postgresql://${DATABASE_SERVICE_NAME}/${DATABASE_NAME}"
                            },
                            {
                                "name": "SONARQUBE_JDBC_USERNAME",
                                "value": "${DATABASE_USER}"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "2Gi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sonar-logs",
                                "mountPath": "/opt/sonarqube/logs"
                            },
                            {
                                "name": "sonar-temp",
                                "mountPath": "/opt/sonarqube/temp"
                            },
                            {
                                "name": "sonar-data",
                                "mountPath": "/opt/sonarqube/data",
                                "subPath": "data"
                            },
                            {
                                "name": "sonar-data",
                                "mountPath": "/opt/sonarqube/extensions/plugins",
                                "subPath": "plugins"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 9000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 240,
                            "timeoutSeconds": 10,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 9000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 240,
                            "timeoutSeconds": 10,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "securityContext": {},
                "schedulerName": "default-scheduler"
            }
        }
    },
    "status": {
        "latestVersion": 0,
        "observedGeneration": 0,
        "replicas": 0,
        "updatedReplicas": 0,
        "availableReplicas": 0,
        "unavailableReplicas": 0
    }
}


  ],
  "parameters": [
    {
      "name": "APPLICATION_NAME",
      "displayName": "Application Name",
      "description": "The name given to the application",
      "required": true,
      "value": "news"
    },
    {
      "name": "BUILD_PROJECT",
      "displayName": "Build Project",
      "description": "The openshift project where builds and target images are stored.",
      "required": true,
      "value": "news-tools"
    },
    {
      "name": "DEPLOYMENT_TYPE",
      "displayName": "Deployment Type",
      "description": "The name assigned to the imagestreams defined in this template.",
      "required": true,
      "value": "latest"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Source Repository",
      "description": "The source repository to use for the builds.",
      "required": true,
      "value": "https://github.com/bcgov/gcpe-news-webapp.git"
    },	
    {
      "name": "GIT_REFERENCE",
      "displayName": "Git Reference",
      "description": "Optional branch, tag, or commit.",
      "required": true,
      "value": "master"
    },
	{
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database volume capacity",
      "description": "Size of the database used for SonarQube",
      "value": "5Gi"
    },
	{
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database service name",
      "description": "Name of the database service",
      "value": "postgresql-sonarqube"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "Database Username",
      "description": "Username for the PostgreSQL user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "Database Password",
      "description": "Password for the PostgreSQL user that will be used for accessing the database.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "value": "sonar"
    },
	{
      "name": "POSTGRES_IMAGE_NAMESPACE",
      "displayName": "postgres image namespace",
      "description": "The OpenShift Namespace where the postgres ImageStream resides.",
      "value": "openshift"
    }
  ]
}